services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
        # fetching services directly from the container via $container->get() won't work.
        # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: './*'
        exclude: './{DependencyInjection,Entity,EventSourcing/Aggregate,Infrastructure/Repository}'

    Xm\SymfonyBundle\EventStore\MetadataIssuedByEnricher:
        tags:
            - { name: 'prooph_event_store.metadata_enricher' }

    Xm\SymfonyBundle\EventStore\EventStoreMessengerPlugin:
        tags:
            - { name: 'prooph_event_store.plugin' }
